server {
    # Change to port 8090 to match the exposed port in the Dockerfile
    listen 8090;
    server_name localhost;
    
    # Enable detailed logging
    access_log /dev/stdout;
    error_log /dev/stderr debug;

    # API routes
    location /api/ {
        # Leitet Anfragen an den lokalen Server auf Port 3001 weiter.
        proxy_pass http://127.0.0.1:3001;
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        
        # Fügt einen Debug-Header hinzu, der die ursprüngliche URI der Anfrage enthält.
        add_header X-Debug-Original-URI $request_uri always;
        # Fügt einen Debug-Header hinzu, der den vom Server interpretierten Pfad enthält.
        add_header X-Debug-Path $uri always;

        # Setzt die HTTP-Version für die Weiterleitung auf 1.1.
        proxy_http_version 1.1;
        # Überträgt das Upgrade-Header für WebSocket-Unterstützung.
        proxy_set_header Upgrade $http_upgrade;
        # Setzt das Connection-Header auf 'upgrade' für WebSocket-Unterstützung.
        proxy_set_header Connection 'upgrade';
        # Überträgt den ursprünglichen Host-Header an den Zielserver.
        proxy_set_header Host $host;
        # Überträgt die IP-Adresse des Clients an den Zielserver.
        proxy_set_header X-Real-IP $remote_addr;
        # Fügt die IP-Adresse des Clients zur X-Forwarded-For-Kette hinzu.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Umgeht das Caching, wenn das Pragma-Header gesetzt ist.
        proxy_cache_bypass $http_pragma;
        # Fügt einen Header hinzu, der das Caching im Browser und Proxy unterbindet.
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }

    # UI routes
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
#        proxy_cache_bypass $http_upgrade;
    }
}

